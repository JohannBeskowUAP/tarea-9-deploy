---
import { state } from '../state';

const boardSize = 3;

// Función para verificar el ganador
function checkWinner(board: string[][]): string | null {
  for (let i = 0; i < boardSize; i++) {
    if (board[i][0] && board[i][0] === board[i][1] && board[i][1] === board[i][2]) return board[i][0];
    if (board[0][i] && board[0][i] === board[1][i] && board[1][i] === board[2][i]) return board[0][i];
  }
  if (board[0][0] && board[0][0] === board[1][1] && board[1][1] === board[2][2]) return board[0][0];
  if (board[0][2] && board[0][2] === board[1][1] && board[1][1] === board[2][0]) return board[0][2];

  if (board.every(row => row.every(cell => cell !== ""))) return "tie";
  return null;
}

// Copiamos el estado para trabajar con él
let board = state.board.map(row => [...row]);
let currentPlayer = state.currentPlayer;
let winner = state.winner;
let gameOver = state.gameOver;

if (Astro.request.method === 'POST') {
  const formData = await Astro.request.formData();
  const move = formData.get('move')?.toString();
  const reset = formData.get('reset');

  if (reset) {
    state.board = Array(3).fill(null).map(() => Array(3).fill(""));
    state.currentPlayer = "X";
    state.winner = null;
    state.gameOver = false;
  }

  if (move && !state.gameOver) {
    const [row, col] = move.split(',').map(Number);
    if (state.board[row][col] === "") {
      state.board[row][col] = state.currentPlayer;
      state.winner = checkWinner(state.board);
      state.gameOver = !!state.winner;
      if (!state.gameOver) {
        state.currentPlayer = state.currentPlayer === "X" ? "O" : "X";
      }
    }
  }

  // Actualizar las copias locales
  board = state.board.map(row => [...row]);
  currentPlayer = state.currentPlayer;
  winner = state.winner;
  gameOver = state.gameOver;
}
---

<h1>Ta Te Ti</h1>
<p>
  {
    gameOver
      ? (winner === "tie" ? "Empate" : `Gana el jugador ${winner}`)
      : `Turno del jugador: ${currentPlayer}`
  }
</p>

<form method="POST">
  <div class="board">
    {
      board.map((row, rowIndex) => (
        <div class="row">
          {
            row.map((cell, colIndex) => (
              <button
                type="submit"
                name="move"
                value={`${rowIndex},${colIndex}`}
                class="cell"
                disabled={cell !== "" || gameOver}
              >
                {cell}
              </button>
            ))
          }
        </div>
      ))
    }
  </div>
</form>

{gameOver && (
  <form method="POST">
    <button type="submit" name="reset" value="true" class="reset">Reiniciar</button>
  </form>
)}

<style>
  body {
    font-family: sans-serif;
    text-align: center;
    background: #f2f2f2;
    padding: 2rem;
  }

  .board {
    display: inline-block;
    margin-top: 1rem;
  }

  .row {
    display: flex;
  }

  .cell {
    width: 80px;
    height: 80px;
    font-size: 2rem;
    margin: 5px;
    cursor: pointer;
  }

  .reset {
    margin-top: 1rem;
    padding: 0.5rem 1rem;
    font-size: 1rem;
  }
</style>
